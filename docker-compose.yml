version: "3"
services:
  web:
    depends_on:
      - db
    build:
      context: ./backend
    container_name: ft_transcendence-web
    restart: always
    environment:
      - API_UID_42=${API_UID_42}
      - API_SECRET_42=${API_SECRET_42}
      - API_REDIR_URI_42=${API_REDIR_URI_42}
      - API_HOST_42=${API_HOST_42}
      - DATABASE_URL=${DATABASE_URL}
      - AES_KEY_OTP=${AES_KEY_OTP}
      - NODEMAILER_EMAIL=${NODEMAILER_EMAIL}
      - NODEMAILER_PASS=${NODEMAILER_PASS}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGDB=${POSTGRES_DB}
    ports:
      - 3001:3001 #webserver (change this port on prod)
      - 4896:4896 #game socket.io
      - 5555:5555 #prisma studio (change this port on prod)
    networks:
      - ft_trans
    volumes:
      - ./backend:/ft_transcendence-web #maps current host dir to docker working dir
      - ./common:/ft_transcendence-web/src/common
    # cpu_count: 2
    # cpu_percent: 50
    # mem_limit: 1000000000
    # memswap_limit: 2000000000

  db:
    image: postgres:13.4-buster
    container_name: ft_transcendence-db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - '5432:5432' #database 
    networks:
      - ft_trans
    volumes: 
      - db:/var/lib/postgresql/data

  front:
    depends_on:
      - web
    build:
      context: ./frontend
    container_name: ft_transcendence-front
    ports:
      - 3000:3000 #frontend (change this port on prod)
    networks:
      - ft_trans
    environment:
    - REACT_APP_API_UID_42=${API_UID_42}
    - REACT_APP_API_REDIR_URI_42=${API_REDIR_URI_42}
    - REACT_APP_API_HOST_42=${API_HOST_42}
    volumes:
      - ./frontend:/ft_transcendence-front #maps current host dir to docker working dir
      - ./common:/ft_transcendence-front/src/common
    # cpu_count: 2
    # cpu_percent: 50
    # mem_limit: 1000000000
    # memswap_limit: 2000000000

volumes:
  db:
    driver: local

networks:
  ft_trans:
